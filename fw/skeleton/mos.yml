# arch: PLATFORM   # possible values for PLATFORM: esp8266 cc3200
version: 1.0
# mongoose_os_version determines the revision of the
# https://github.com/cesanta/mongoose-os repository
# against which the app should be built. It can be either a branch name (e.g.
# master), or, if you want to freeze the mongoose-os version, you can use a
# SHA hash of the desired revision, or a tag.
mongoose_os_version: master
skeleton_version: 2017-05-18
sources:
  - src
filesystem:
  - fs
# If you need some files outside of the dirs indicated in "sources" and
# "filesystem" to be uploaded during the remote build, indicate them
# in extra_files.
extra_files:
config_schema:
  # Below is a custom firmware configuration example.
  # Uncomment and modify according to your needs.
  # These settings get compiled into the C structure, and can be accessed
  # from the C code this way:
  #
  # printf("Hello, %s!\n", get_cfg()->my_firmware.message);
  #
  # Settings are cool: can be modified remotely without full firmware upgrade!
  #
  # To see all available compiled settings, buid the firmware and open
  # build/sys_config.c or build/sys_config.h file.

  #- ["my_firmware", "o", {"title": "My firmware settings"}]
  #- ["my_firmware.limit1", "i", 123, {"title": "Integer setting example"}]
  #- ["my_firmware.allow", "b", true, {"title": "Boolean setting example"}]
  #- ["my_firmware.message", "s", "boo!", {"title": "String setting example"}]

  # Also, you can override an existing "system" value:

  #- ["uart.baud_rate", 9600]
